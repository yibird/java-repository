import{_ as e,o as a,c as r,O as i}from"./chunks/framework.1e38657f.js";const T=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"systemsDesign/keywordFiltering.md","filePath":"systemsDesign/keywordFiltering.md","lastUpdated":1708792908000}'),t={name:"systemsDesign/keywordFiltering.md"},l=i('<p>随着互联网的普及和信息传播的快速扩散，出现了大量的文本内容，其中可能包含不当、违法、有害或令人不快的信息,例如带有敏感词的评论和弹幕、垃圾信息或非法宣传的广告、包含用户隐私的敏感信息等。为了提升用户体验和满足地区相应法律法规,对于用户发布的内容信息进行关键词过滤,关键词过滤是一种常见的文本处理任务,用于检测和过滤包含特定关键词的文本。常见的关键词过滤方案分为以下几种:</p><ul><li>基于规则的匹配。使用预定义的规则或模式来匹配和过滤字符串中的关键词。这可以是简单的字符串匹配，也可以使用正则表达式等更强大的模式匹配机制。</li><li>基于 Trie 树。使用 Trie 树（前缀树）数据结构来存储关键词。将关键词拆分为字符序列，并将每个字符作为树的节点存储。通过遍历 Trie 树并检查匹配路径，可以快速确定字符串中是否存在关键词。</li><li>基于 AC 自动机算法。AC 自动机是基于 Trie 树的改进版本，它可以在一个字符串中同时查找多个关键词。AC 自动机通过构建 Trie 树的同时建立失败路径，以实现快速的多模式匹配。</li><li>基于双数组字典树（Double-Array Trie）。双数组字典树是对 Trie 树的改进，它使用两个数组来存储节点的状态和转移信息，从而提高内存效率和查询性能。</li><li>基于倒排索引。倒排索引是一种将关键词映射到文本的数据结构。通过构建关键词到文本的映射，可以快速定位包含关键词的文本片段。</li></ul><h2 id="_1-基于规则的匹配" tabindex="-1">1.基于规则的匹配 <a class="header-anchor" href="#_1-基于规则的匹配" aria-label="Permalink to &quot;1.基于规则的匹配&quot;">​</a></h2><h2 id="_2-基于-trie-树实现关键词过滤" tabindex="-1">2.基于 Trie 树实现关键词过滤 <a class="header-anchor" href="#_2-基于-trie-树实现关键词过滤" aria-label="Permalink to &quot;2.基于 Trie 树实现关键词过滤&quot;">​</a></h2><h2 id="_3-基于-ac-自动机算法实现关键词过滤" tabindex="-1">3.基于 AC 自动机算法实现关键词过滤 <a class="header-anchor" href="#_3-基于-ac-自动机算法实现关键词过滤" aria-label="Permalink to &quot;3.基于 AC 自动机算法实现关键词过滤&quot;">​</a></h2><h2 id="_4-基于双数组字典树-double-array-trie-实现关键词过滤" tabindex="-1">4.基于双数组字典树(Double-Array Trie)实现关键词过滤 <a class="header-anchor" href="#_4-基于双数组字典树-double-array-trie-实现关键词过滤" aria-label="Permalink to &quot;4.基于双数组字典树(Double-Array Trie)实现关键词过滤&quot;">​</a></h2><h2 id="_5-基于倒排索引实现关键词过滤" tabindex="-1">5.基于倒排索引实现关键词过滤 <a class="header-anchor" href="#_5-基于倒排索引实现关键词过滤" aria-label="Permalink to &quot;5.基于倒排索引实现关键词过滤&quot;">​</a></h2>',7),o=[l];function s(n,_,d,c,h,u){return a(),r("div",null,o)}const b=e(t,[["render",s]]);export{T as __pageData,b as default};
