import{_ as s,o as n,c as a,O as l}from"./chunks/framework.1e38657f.js";const F=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"base/annotation.md","filePath":"base/annotation.md","lastUpdated":1708792908000}'),p={name:"base/annotation.md"},o=l(`<p>注解(Annotation)是 JDK1.5 版本开始引入的一个特性,用于对代码进行说明,可以对包、类、接口、字段、方法参数、局部变量等进行注解(使用注解时以<code>@+注解名</code>,例如:<code>@Override</code>)。 它主要的作用有以下四方面:</p><ul><li>生成文档。通过代码里标识的元数据生成 javadoc 文档。</li><li>编译检查。通过代码里标识的元数据让编译器在编译期间进行检查验证。</li><li>编译时动态处理。编译时通过代码里标识的元数据动态处理,例如动态生成代码。</li><li>运行时动态处理。运行时通过代码里标识的元数据动态处理,例如使用反射注入实例。</li></ul><h2 id="_1-注解基础" tabindex="-1">1.注解基础 <a class="header-anchor" href="#_1-注解基础" aria-label="Permalink to &quot;1.注解基础&quot;">​</a></h2><p>在 Java 中注解可分为内置注解、元注解、自定义注解三种:</p><ul><li>内置注解:内置注解表示 Java 自带的标准注解,包括<code>@Override</code>、<code>@Deprecated</code>和<code>@SuppressWarnings</code>,分别用于标明重写某个方法、标明某个类或方法过时、标明要忽略的警告,用这些注解标明后编译器就会进行检查。</li><li>元注解:元注解是用于定义注解的注解,包括<code>@Retention</code>、<code>@Target</code>、<code>@Inherited</code>、<code>@Documented</code>，<code>@Retention</code>用于标明注解被保留的阶段，@Target 用于标明注解使用的范围，@Inherited 用于标明注解可继承，@Documented 用于标明是否生成 javadoc 文档。</li><li>自定义注解:可以根据自己的需求定义注解,并可用元注解对自定义注解进行注解。</li></ul><h3 id="_1-1-内置注解" tabindex="-1">1.1 内置注解 <a class="header-anchor" href="#_1-1-内置注解" aria-label="Permalink to &quot;1.1 内置注解&quot;">​</a></h3><ul><li>@Override:表示当前的方法定义将覆盖父类中的方法。</li><li>@Deprecated:表示代码被弃用,不再建议用户使用,如果使用了被<code>@Deprecated</code>注解的代码则编译器将发出警告。</li><li>@SuppressWarnings:表示关闭编译器警告信息。</li></ul><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">/**</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"> * Override注解源码。</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"> * @Target(ElementType.METHOD):表示该注解只能作用于方法上。</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"> * @Retention(RetentionPolicy.SOURCE):表示该注解只在编译时有效,</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"> * 编译后的class文件中不会存在该注解。</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"> */</span></span>
<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Target</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">ElementType</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">METHOD</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Retention</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">RetentionPolicy</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">SOURCE</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">interface</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">Override</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">/**</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"> * Deprecated注解源码。</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"> * @Documented:标明会生成javadoc文档。</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"> * @Retention(RetentionPolicy.RUNTIME):表示注解能够保留到运行时。</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"> * @Target(value={CONSTRUCTOR, FIELD, LOCAL_VARIABLE, METHOD, PACKAGE, PARAMETER, TYPE}):</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"> * 表示该注解作用于构造方法、属性、局部变量、方法、包、参数、类型上。</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"> */</span></span>
<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Documented</span></span>
<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Retention</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">RetentionPolicy</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">RUNTIME</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Target</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">value</span><span style="color:#89DDFF;">={</span><span style="color:#A6ACCD;">CONSTRUCTOR</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> FIELD</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> LOCAL_VARIABLE</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> METHOD</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> PACKAGE</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> PARAMETER</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> TYPE</span><span style="color:#89DDFF;">})</span></span>
<span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">interface</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">Deprecated</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">/**</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"> * SuppressWarnings注解源码。</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"> * @Target({TYPE, FIELD, METHOD, PARAMETER, CONSTRUCTOR, LOCAL_VARIABLE}):表示该注解作用于</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"> * 类型、字段、方法、参数、构造函数、本地变量。</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"> * @Retention(RetentionPolicy.SOURCE)表示该注解只在编译时有效,编译后不会保留该注解。</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"> * String[] value()表示注解的参数,可选值为:</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"> * - all:抑制所有警告(to suppress all warnings)。</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"> * - boxing:抑制装箱、拆箱操作时候的警告(to suppress warnings relative to boxing/unboxing operations)。</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"> * - cast:抑制映射相关的警告(to suppress warnings relative to cast operations)。</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"> * - dep-ann:抑制启用注释的警告(to suppress warnings relative to deprecated annotation)。</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"> * - deprecation:抑制过期方法警告(to suppress warnings relative to deprecation)。</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"> * - fallthrough:抑制确在switch中缺失breaks的警告(to suppress warnings relative to missing breaks in switch statements)。</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"> * - finally:抑制finally模块没有返回的警告(to suppress warnings relative to finally block that don’t return)。</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"> * - hiding:抑制与隐藏变数的区域变数相关的警告(to suppress warnings relative to locals that hide variable)。</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"> * - incomplete-switch:忽略没有完整的switch语句(to suppress warnings relative to missing entries in a switch statement (enum case))。</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"> * - nls:忽略非nls格式的字符(to suppress warnings relative to non-nls string literals)。</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"> * - null:忽略对null的操作(to suppress warnings relative to null analysis)。</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"> * - rawtype:使用generics时忽略没有指定相应的类型(to suppress warnings relative to un-specific types when using)。</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"> * - restriction:抑制与使用不建议或禁止参照相关的警告(to suppress warnings relative to usage of discouraged or)。</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"> * - serial:忽略在serializable类中没有声明serialVersionUID变量(to suppress warnings relative to missing serialVersionUID field for a serializable class)。</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"> * - static-access:抑制不正确的静态访问方式警告(to suppress warnings relative to incorrect static access)。</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"> * - synthetic-access:抑制子类没有按最优方法访问内部类的警告(to suppress warnings relative to unoptimized access from inner classes)。</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"> * - unchecked:抑制没有进行类型检查操作的警告(to suppress warnings relative to unchecked operations)。</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"> * - unqualified-field-access:抑制没有权限访问的域的警告(to suppress warnings relative to field access unqualified)。</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"> * - unused:抑制没被使用过的代码的警告(to suppress warnings relative to unused code)。</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"> */</span></span>
<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Target</span><span style="color:#89DDFF;">({</span><span style="color:#A6ACCD;">TYPE</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> FIELD</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> METHOD</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> PARAMETER</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> CONSTRUCTOR</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> LOCAL_VARIABLE</span><span style="color:#89DDFF;">})</span></span>
<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Retention</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">RetentionPolicy</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">SOURCE</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">interface</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">SuppressWarnings</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">String</span><span style="color:#89DDFF;">[]</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">value</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><p>@Override、@Deprecated、@SuppressWarnings 使用例子:</p><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">A</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">hello</span><span style="color:#89DDFF;">(){}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">B</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">extends</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">A</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    /**</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">     * 重载父类方法</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">     */</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Override</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">hello</span><span style="color:#89DDFF;">(){}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    /**</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">     * 被废弃的方法</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">     */</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Deprecated</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">oldMethod</span><span style="color:#89DDFF;">(){</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    /**</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">     * 忽略警告</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">     */</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">SuppressWarnings</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">rawtypes</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">List</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">processList</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#C792EA;">List</span><span style="color:#A6ACCD;"> list </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">ArrayList</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> list</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><h3 id="_1-2-元注解" tabindex="-1">1.2 元注解 <a class="header-anchor" href="#_1-2-元注解" aria-label="Permalink to &quot;1.2 元注解&quot;">​</a></h3><p>在 JDK 1.5 中提供了 4 个标准的元注解:<code>@Target</code>、<code>@Retention</code>、<code>@Documented</code>、<code>@Inherited</code>,在 JDK 1.8 中提供了两个元注解 <code>@Repeatable</code>和<code>@Native</code>。</p><ul><li><code>@Documented</code>:该注解用于标明当前注解是否生成 javadoc 文档。</li><li><code>@Inherited</code>:该注解表示当前注解是否可继承,如果某个类使用了被<code>@Inherited</code>修饰的 Annotation,则其子类将自动具有该注解。</li><li><code>@Repeatable</code>:用于声明重复注解。允许在同一申明类型(类,属性,或方法)的多次使用同一个注解,提高可读性。</li><li><code>@Native</code>:使用 @Native 注解修饰成员变量,则表示这个变量可以被本地代码引用,常常被代码生成工具使用。@Native 注解不常使用。</li></ul><h4 id="_1-2-1-target" tabindex="-1">1.2.1 @Target <a class="header-anchor" href="#_1-2-1-target" aria-label="Permalink to &quot;1.2.1 @Target&quot;">​</a></h4><p><code>@Target</code>元注解表示描述注解的使用范围(即注解的可以在哪些地方使用)。该注解接收一个 ElementType 数组,ElementType 是一个枚举类,提供了注解使用范围枚举变量。</p><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">/**</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"> * @Target注解源码。</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"> * @Documented:标明会生成javadoc文档。</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"> * @Retention(RetentionPolicy.RUNTIME):表示注解能够保留到运行时。</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"> * @Target(ElementType.ANNOTATION_TYPE):表示注解只能作用于注解上。</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"> * ElementType[] value():Target注解接收一组ElementType值,ElementType是一个枚举类,</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"> * 内部提供了大量枚举常量:</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"> * - ElementType.TYPE:表示作用于类、接口、枚举类。</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"> * - ElementType.FIELD:表示作用于字段(包含枚举常量)。</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"> * - ElementType.METHOD:表示作用于方法。</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"> * - ElementType.PARAMETER:表示作用于参数。</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"> * - ElementType.CONSTRUCTOR:表示作用于构造方法。</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"> * - ElementType.LOCAL_VARIABLE:表示作用于本地变量。</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"> * - ElementType.ANNOTATION_TYPE:表示作用于注解。</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"> * - ElementType.PACKAGE:表示作用于包。</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"> * - ElementType.TYPE_PARAMETER:表示作用于类型参数,JDK1.8新增。</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"> * - ElementType.TYPE_USE:表示作用于所有类型,JDK1.8新增。</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"> */</span></span>
<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Documented</span></span>
<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Retention</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">RetentionPolicy</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">RUNTIME</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Target</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">ElementType</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">ANNOTATION_TYPE</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">interface</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">Target</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">ElementType</span><span style="color:#89DDFF;">[]</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">value</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><h4 id="_1-2-2-retention" tabindex="-1">1.2.2 @Retention <a class="header-anchor" href="#_1-2-2-retention" aria-label="Permalink to &quot;1.2.2 @Retention&quot;">​</a></h4><p><code>@Retention</code>元注解表示注解保留的时间范围(即被描述的注解在它所修饰的类中可以被保留到何时)。</p><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">/**</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"> * Retention注解源码。</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"> * @Documented:标明生成javadoc文档。</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"> * @Target(ElementType.ANNOTATION_TYPE):表示该注解只能作用于注解上。</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"> * @Retention(RetentionPolicy.RUNTIME):表示注解能够保留到运行时。</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"> * RetentionPolicy value():Retention注解接收一个RetentionPolicy(注解保留策略类)类型作为参数,</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"> * RetentionPolicy是一个枚举类,提供了如下常量:</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"> * - RetentionPolicy.SOURCE:仅在源文件保留,编译后的字节码文件不会保留该注解。</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"> * - RetentionPolicy.CLASS:编译期保留。编译器会将注解记录在类文件中,但不需要在运行时由VM保留。默认策略。</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"> * - RetentionPolicy.RUNTIME:运行期保留。编译器会将注解将记录在类文件中,并在运行时由VM保留,因此可以进行反射读取。</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"> */</span></span>
<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Documented</span></span>
<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Retention</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">RetentionPolicy</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">RUNTIME</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Target</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">ElementType</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">ANNOTATION_TYPE</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">interface</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">Retention</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">RetentionPolicy</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">value</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><p>验证 RetentionPolicy 中 SOURCE、CLASS、RUNTIME 区别:</p><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#F78C6C;">package</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">annotation</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#F78C6C;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">java</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">lang</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">annotation</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">Retention</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F78C6C;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">java</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">lang</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">annotation</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">RetentionPolicy</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Retention</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">RetentionPolicy</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">SOURCE</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">interface</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">SourcePolicy</span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Retention</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">RetentionPolicy</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">CLASS</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">interface</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">ClassPolicy</span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Retention</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">RetentionPolicy</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">RUNTIME</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">interface</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">RuntimePolicy</span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Example</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">SourcePolicy</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">sourcePolicy</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">ClassPolicy</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">classPolicy</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">RuntimePolicy</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">runtimePolicy</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><p>执行如下命令将源文件编译为字节码文件,并反编译字节码文件输出详细信息:</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;"># 通过Java编译器编译Example.java文件为.class字节码文件</span></span>
<span class="line"><span style="color:#FFCB6B;">javac</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">Example.java</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># javap是JDK提供的一个命令行工具,javap能对给定的.class文件提供的字节代码进行反编译,-verbose表示输出详细信息</span></span>
<span class="line"><span style="color:#FFCB6B;">javap</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-verbose</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">Example</span></span></code></pre></div><p>反编译.class 的结果如下:</p><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">Classfile </span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;">Users</span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;">study</span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;">java</span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;">example</span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;">java</span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">base</span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;">src</span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;">annotation</span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;">Example</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">class</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#C792EA;">Last</span><span style="color:#A6ACCD;"> modified 2022年8月11日</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> size </span><span style="color:#F78C6C;">499</span><span style="color:#A6ACCD;"> bytes</span></span>
<span class="line"><span style="color:#A6ACCD;">  SHA</span><span style="color:#89DDFF;">-</span><span style="color:#F78C6C;">256</span><span style="color:#A6ACCD;"> checksum 9721fac68c48ca841ec3add6d5997a4e1b2424e352007c43397fc79590549b3b</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#C792EA;">Compiled</span><span style="color:#A6ACCD;"> from </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Example.java</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">annotation</span><span style="color:#A6ACCD;">.Example</span></span>
<span class="line"><span style="color:#A6ACCD;">  minor version: 0</span></span>
<span class="line"><span style="color:#A6ACCD;">  major version: 61</span></span>
<span class="line"><span style="color:#A6ACCD;">  flags: (0x0021) ACC_PUBLIC, ACC_SUPER</span></span>
<span class="line"><span style="color:#A6ACCD;">  this_class: #7                          </span><span style="color:#676E95;font-style:italic;">// annotation/Example</span></span>
<span class="line"><span style="color:#A6ACCD;">  super_class: #2                         </span><span style="color:#676E95;font-style:italic;">// java/lang/Object</span></span>
<span class="line"><span style="color:#A6ACCD;">  interfaces: 0, fields: 0, methods: 4, attributes: 1</span></span>
<span class="line"><span style="color:#A6ACCD;">Constant pool:</span></span>
<span class="line"><span style="color:#A6ACCD;">   #1 = Methodref          #2.#3          </span><span style="color:#676E95;font-style:italic;">// java/lang/Object.&quot;&lt;init&gt;&quot;:()V</span></span>
<span class="line"><span style="color:#A6ACCD;">   #2 = Class              #4             </span><span style="color:#676E95;font-style:italic;">// java/lang/Object</span></span>
<span class="line"><span style="color:#A6ACCD;">   #3 = NameAndType        #5:#6          </span><span style="color:#676E95;font-style:italic;">// &quot;&lt;init&gt;&quot;:()V</span></span>
<span class="line"><span style="color:#A6ACCD;">   #4 = Utf8               java/lang/Object</span></span>
<span class="line"><span style="color:#A6ACCD;">   #5 = Utf8               </span><span style="color:#89DDFF;">&lt;</span><span style="color:#C792EA;">init</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">   #6 = Utf8               ()V</span></span>
<span class="line"><span style="color:#A6ACCD;">   #7 = Class              #8             </span><span style="color:#676E95;font-style:italic;">// annotation/Example</span></span>
<span class="line"><span style="color:#A6ACCD;">   #8 = Utf8               annotation/Example</span></span>
<span class="line"><span style="color:#A6ACCD;">   #9 = Utf8               Code</span></span>
<span class="line"><span style="color:#A6ACCD;">  #10 = Utf8               LineNumberTable</span></span>
<span class="line"><span style="color:#A6ACCD;">  #11 = Utf8               sourcePolicy</span></span>
<span class="line"><span style="color:#A6ACCD;">  #12 = Utf8               classPolicy</span></span>
<span class="line"><span style="color:#A6ACCD;">  #13 = Utf8               RuntimeInvisibleAnnotations</span></span>
<span class="line"><span style="color:#A6ACCD;">  #14 = Utf8               Lannotation/ClassPolicy;</span></span>
<span class="line"><span style="color:#A6ACCD;">  #15 = Utf8               runtimePolicy</span></span>
<span class="line"><span style="color:#A6ACCD;">  #16 = Utf8               RuntimeVisibleAnnotations</span></span>
<span class="line"><span style="color:#A6ACCD;">  #17 = Utf8               Lannotation/RuntimePolicy;</span></span>
<span class="line"><span style="color:#A6ACCD;">  #18 = Utf8               SourceFile</span></span>
<span class="line"><span style="color:#A6ACCD;">  #19 = Utf8               Example.java</span></span>
<span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> annotation.</span><span style="color:#82AAFF;">Example</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#A6ACCD;">    descriptor: ()V</span></span>
<span class="line"><span style="color:#A6ACCD;">    flags: (0x0001) ACC_PUBLIC</span></span>
<span class="line"><span style="color:#A6ACCD;">    Code:</span></span>
<span class="line"><span style="color:#A6ACCD;">      stack=1, locals=1, args_size=1</span></span>
<span class="line"><span style="color:#A6ACCD;">         0: aload_0</span></span>
<span class="line"><span style="color:#A6ACCD;">         1: invokespecial #1                  </span><span style="color:#676E95;font-style:italic;">// Method java/lang/Object.&quot;&lt;init&gt;&quot;:()V</span></span>
<span class="line"><span style="color:#A6ACCD;">         4: return</span></span>
<span class="line"><span style="color:#A6ACCD;">      LineNumberTable:</span></span>
<span class="line"><span style="color:#A6ACCD;">        line 22: 0</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">sourcePolicy</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#A6ACCD;">    descriptor: ()V</span></span>
<span class="line"><span style="color:#A6ACCD;">    flags: (0x0001) ACC_PUBLIC</span></span>
<span class="line"><span style="color:#A6ACCD;">    Code:</span></span>
<span class="line"><span style="color:#A6ACCD;">      stack=0, locals=1, args_size=1</span></span>
<span class="line"><span style="color:#A6ACCD;">         0: return</span></span>
<span class="line"><span style="color:#A6ACCD;">      LineNumberTable:</span></span>
<span class="line"><span style="color:#A6ACCD;">        line 25: 0</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">classPolicy</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#A6ACCD;">    descriptor: ()V</span></span>
<span class="line"><span style="color:#A6ACCD;">    flags: (0x0001) ACC_PUBLIC</span></span>
<span class="line"><span style="color:#A6ACCD;">    Code:</span></span>
<span class="line"><span style="color:#A6ACCD;">      stack=0, locals=1, args_size=1</span></span>
<span class="line"><span style="color:#A6ACCD;">         0: return</span></span>
<span class="line"><span style="color:#A6ACCD;">      LineNumberTable:</span></span>
<span class="line"><span style="color:#A6ACCD;">        line 29: 0</span></span>
<span class="line"><span style="color:#A6ACCD;">    RuntimeInvisibleAnnotations:</span></span>
<span class="line"><span style="color:#A6ACCD;">      0: #</span><span style="color:#82AAFF;">14</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#A6ACCD;">        annotation.ClassPolicy</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">runtimePolicy</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#A6ACCD;">    descriptor: ()V</span></span>
<span class="line"><span style="color:#A6ACCD;">    flags: (0x0001) ACC_PUBLIC</span></span>
<span class="line"><span style="color:#A6ACCD;">    Code:</span></span>
<span class="line"><span style="color:#A6ACCD;">      stack=0, locals=1, args_size=1</span></span>
<span class="line"><span style="color:#A6ACCD;">         0: return</span></span>
<span class="line"><span style="color:#A6ACCD;">      LineNumberTable:</span></span>
<span class="line"><span style="color:#A6ACCD;">        line 33: 0</span></span>
<span class="line"><span style="color:#A6ACCD;">    RuntimeVisibleAnnotations:</span></span>
<span class="line"><span style="color:#A6ACCD;">      0: #</span><span style="color:#82AAFF;">17</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#A6ACCD;">        annotation.RuntimePolicy</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">SourceFile</span><span style="color:#89DDFF;font-style:italic;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Example.java</span><span style="color:#89DDFF;">&quot;</span></span></code></pre></div><p>从反编译后的结果得出结论:</p><ul><li>编译器并没有记录下 sourcePolicy() 方法的注解信息,RetentionPolicy.SOURCE 策略仅在源文件阶段保留,编译后的字节码文件不会保留该注解。</li><li>编译器分别使用了 RuntimeInvisibleAnnotations 和 RuntimeVisibleAnnotations 属性去记录了 classPolicy()方法 和 runtimePolicy()方法 的注解信息。</li></ul><h3 id="_1-3-自定义注解" tabindex="-1">1.3 自定义注解 <a class="header-anchor" href="#_1-3-自定义注解" aria-label="Permalink to &quot;1.3 自定义注解&quot;">​</a></h3><p>自定义注解依赖于元注解,其中<code>@Target</code>和<code>@Retention</code>是在自定义注解中最为常用的元注解。</p><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#F78C6C;">package</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">annotation</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F78C6C;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">java</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">lang</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">annotation</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">ElementType</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F78C6C;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">java</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">lang</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">annotation</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">Retention</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F78C6C;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">java</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">lang</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">annotation</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">RetentionPolicy</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F78C6C;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">java</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">lang</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">annotation</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">Target</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">/**</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"> * 自定义日志注解</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"> * @Target(ElementType.METHOD):只允许作用于方法上。</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"> * @Retention(RetentionPolicy.RUNTIME):保留策略为运行时保留。</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"> * </span><span style="color:#F78C6C;font-style:italic;">@author</span><span style="color:#676E95;font-style:italic;"> apple</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"> */</span></span>
<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Target</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">ElementType</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">METHOD</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Retention</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">RetentionPolicy</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">RUNTIME</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">interface</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">Logger</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// 声明value()属性可以在使用注解时忽略参数名</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">String</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">title</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">String</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">description</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#F78C6C;">package</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">annotation</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">/**</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"> * 使用自定义注解</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"> */</span></span>
<span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">LoggerAnnotationTest</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Logger</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">title</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">获取用户记录</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#FFCB6B;">description</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">根据账号密码获取用户记录</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">getUserRecord</span><span style="color:#89DDFF;">(){}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><h2 id="_2-注解原理" tabindex="-1">2.注解原理 <a class="header-anchor" href="#_2-注解原理" aria-label="Permalink to &quot;2.注解原理&quot;">​</a></h2><h2 id="_3-注解的应用" tabindex="-1">3.注解的应用 <a class="header-anchor" href="#_3-注解的应用" aria-label="Permalink to &quot;3.注解的应用&quot;">​</a></h2><ul><li>配置化到注解化。Spring 从最早的配置化到现在的注解化,极大地简化了繁琐的配置。</li><li>继承实现到注解实现。一个模块的封装大多数人都是通过继承和组合等模式来实现的,但是如果结合注解将可以极大程度提高实现的优雅度(降低耦合度)。Junit3 到 Junit4 演化就是一个代表性例子,Junit3 以继承的方式测试代码,在 Junit4 中以注解的形式测试代码。</li></ul><h3 id="_3-1-实现-range-注解" tabindex="-1">3.1 实现@Range 注解 <a class="header-anchor" href="#_3-1-实现-range-注解" aria-label="Permalink to &quot;3.1 实现@Range 注解&quot;">​</a></h3><p>@Range 注解用于检查数值类型的范围。@Range 注解提供 min 和 max 两个属性用于确定数值范围,当注解检查值非数值类型时抛出类型错误,当数值超出 min 和 max 范围值时抛出取值范围错误。</p><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#F78C6C;">package</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">annotation</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F78C6C;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">java</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">lang</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">annotation</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">ElementType</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F78C6C;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">java</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">lang</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">annotation</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">Retention</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F78C6C;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">java</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">lang</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">annotation</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">RetentionPolicy</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F78C6C;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">java</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">lang</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">annotation</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">Target</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Target</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">ElementType</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">FIELD</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Retention</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">RetentionPolicy</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">RUNTIME</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">interface</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">Range</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// 属性默认值为0</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">min</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">default</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">max</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#F78C6C;">package</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">annotation</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">User</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">private</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">String</span><span style="color:#A6ACCD;"> username</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Range</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">min</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">18</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">max</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">65</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">Integer</span><span style="color:#A6ACCD;"> age</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">User</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">User</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">String</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">username</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">Integer</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">age</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">username </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> username</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">age </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> age</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">String</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">getUsername</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> username</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">setUsername</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">String</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">username</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">username </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> username</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">Integer</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">getAge</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> age</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">setAge</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">Integer</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">age</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">age </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> age</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><p>测试:</p><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#F78C6C;">package</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">annotation</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F78C6C;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">java</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">lang</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">reflect</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">Field</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F78C6C;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">java</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">util</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">List</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F78C6C;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">java</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">util</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">stream</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">Collectors</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F78C6C;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">java</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">util</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">stream</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">StreamTest</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">RangeAnnotationTest</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">static</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">main</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">String</span><span style="color:#89DDFF;">[]</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">args</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">throws</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">Exception</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#C792EA;">User</span><span style="color:#A6ACCD;"> u1 </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">User</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">zchengfeng</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">22</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#C792EA;">User</span><span style="color:#A6ACCD;"> u2 </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">User</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">大黄</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">100</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">        RangeAnnotationTest</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">validate</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">u1</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;font-style:italic;">// 抛出异常</span></span>
<span class="line"><span style="color:#A6ACCD;">        RangeAnnotationTest</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">validate</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">u2</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;font-style:italic;">// 如果username字段加上@Range注解则会抛出IllegalArgumentException异常。</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">static</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">validate</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">User</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">u</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">throws</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">Exception</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#C792EA;">Class</span><span style="color:#A6ACCD;"> cls </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> u</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getClass</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;font-style:italic;">// 获取class中所有字段</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#C792EA;">Field</span><span style="color:#89DDFF;">[]</span><span style="color:#A6ACCD;"> fields </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> cls</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getDeclaredFields</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;font-style:italic;">for</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">Field</span><span style="color:#A6ACCD;"> field </span><span style="color:#89DDFF;font-style:italic;">:</span><span style="color:#A6ACCD;"> fields</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">            </span><span style="color:#676E95;font-style:italic;">// 判断字段上存在Range注解</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">field</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">isAnnotationPresent</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">Range</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">class</span><span style="color:#89DDFF;">)){</span></span>
<span class="line"><span style="color:#A6ACCD;">                </span><span style="color:#C792EA;">List</span><span style="color:#A6ACCD;"> list </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> Stream</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">of</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">int</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">java.lang.Integer</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">                        </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">collect</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">Collectors</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">toList</span><span style="color:#89DDFF;">());</span></span>
<span class="line"><span style="color:#89DDFF;">                </span><span style="color:#676E95;font-style:italic;">// 如果不是int或Integer类型则抛出类型错误</span></span>
<span class="line"><span style="color:#A6ACCD;">                </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#89DDFF;">(!</span><span style="color:#A6ACCD;">list</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">contains</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">field</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getType</span><span style="color:#89DDFF;">().</span><span style="color:#82AAFF;">getName</span><span style="color:#89DDFF;">())){</span></span>
<span class="line"><span style="color:#A6ACCD;">                    </span><span style="color:#89DDFF;font-style:italic;">throw</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">IllegalArgumentException</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">field</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getName</span><span style="color:#89DDFF;">()+</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;"> is not a int type</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">                </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">                </span><span style="color:#C792EA;">Range</span><span style="color:#A6ACCD;"> range </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> field</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getAnnotation</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">Range</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">class</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">                </span><span style="color:#C792EA;">Integer</span><span style="color:#A6ACCD;"> value </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">Integer</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> field</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">get</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">u</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#89DDFF;">                </span><span style="color:#676E95;font-style:italic;">// 超出范围抛出错误</span></span>
<span class="line"><span style="color:#A6ACCD;">                </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">value </span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;"> range</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">min</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">||</span><span style="color:#A6ACCD;"> value </span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> range</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">max</span><span style="color:#89DDFF;">()){</span></span>
<span class="line"><span style="color:#A6ACCD;">                    </span><span style="color:#89DDFF;font-style:italic;">throw</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">IndexOutOfBoundsException</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">field</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getName</span><span style="color:#89DDFF;">()+</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;"> out of min max range</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">                </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div>`,40),e=[o];function t(c,r,y,D,i,A){return n(),a("div",null,e)}const E=s(p,[["render",t]]);export{F as __pageData,E as default};
